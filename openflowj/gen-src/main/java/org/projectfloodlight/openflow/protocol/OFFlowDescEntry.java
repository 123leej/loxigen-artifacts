// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template of_interface.java
// Do not modify

package org.projectfloodlight.openflow.protocol;

import org.projectfloodlight.openflow.protocol.*;
import org.projectfloodlight.openflow.protocol.action.*;
import org.projectfloodlight.openflow.protocol.actionid.*;
import org.projectfloodlight.openflow.protocol.bsntlv.*;
import org.projectfloodlight.openflow.protocol.errormsg.*;
import org.projectfloodlight.openflow.protocol.meterband.*;
import org.projectfloodlight.openflow.protocol.instruction.*;
import org.projectfloodlight.openflow.protocol.instructionid.*;
import org.projectfloodlight.openflow.protocol.match.*;
import org.projectfloodlight.openflow.protocol.stat.*;
import org.projectfloodlight.openflow.protocol.oxm.*;
import org.projectfloodlight.openflow.protocol.oxs.*;
import org.projectfloodlight.openflow.protocol.queueprop.*;
import org.projectfloodlight.openflow.types.*;
import org.projectfloodlight.openflow.util.*;
import org.projectfloodlight.openflow.exceptions.*;
import java.util.Set;
import java.util.List;
import io.netty.buffer.ByteBuf;

public interface OFFlowDescEntry extends OFObject {
    TableId getTableId();
    int getPriority();
    int getIdleTimeout();
    int getHardTimeout();
    Set<OFFlowModFlags> getFlags();
    int getImportance();
    U64 getCookie();
    Match getMatch();
    Stat getStats();
    List<OFInstruction> getInstructions();
    OFVersion getVersion();


    void writeTo(ByteBuf channelBuffer);

    Builder createBuilder();
    public interface Builder  {
        OFFlowDescEntry build();
        TableId getTableId();
        Builder setTableId(TableId tableId);
        int getPriority();
        Builder setPriority(int priority);
        int getIdleTimeout();
        Builder setIdleTimeout(int idleTimeout);
        int getHardTimeout();
        Builder setHardTimeout(int hardTimeout);
        Set<OFFlowModFlags> getFlags();
        Builder setFlags(Set<OFFlowModFlags> flags);
        int getImportance();
        Builder setImportance(int importance);
        U64 getCookie();
        Builder setCookie(U64 cookie);
        Match getMatch();
        Builder setMatch(Match match);
        Stat getStats();
        Builder setStats(Stat stats);
        List<OFInstruction> getInstructions();
        Builder setInstructions(List<OFInstruction> instructions);
        OFVersion getVersion();
    }
}
